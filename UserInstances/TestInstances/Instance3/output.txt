
FRAMEWORK FOR COLUMN GENERATION FOR AN EDGE PATH FORMULATION

==================BEGIN READING DATA============== 

==================END READING DATA============== 

---------------BEGIN OF Data Information------------------
  Graph G  
Number of nodes: 5| Number of links: : 5
Nodes: ( 1 2 3 4 5 )
Not oriented
Edges: (1,2) Length 1
(1,5) Length 1
(2,3) Length 1
(3,4) Length 1
(4,5) Length 1
-------- 

  Graph G prime 
Number of nodes: 5| Number of links: : 10
Nodes: ( 1 2 3 4 5 )
Oriented
Arcs:  (1,2) Length 1
 (1,5) Length 1
 (2,3) Length 1
 (3,4) Length 1
 (4,5) Length 1
 (2,1) Length 1
 (5,1) Length 1
 (3,2) Length 1
 (4,3) Length 1
 (5,4) Length 1
-------- 

  Demands  
--------Index: 1
Origin: 1| Destination: 3
Slots: 2| Max Lenght: 3

--------Index: 2
Origin: 2| Destination: 4
Slots: 2| Max Lenght: 3

--------Index: 3
Origin: 3| Destination: 5
Slots: 2| Max Lenght: 3

--------Index: 4
Origin: 4| Destination: 1
Slots: 2| Max Lenght: 3

--------Index: 5
Origin: 5| Destination: 2
Slots: 2| Max Lenght: 3


----------------END OF Data Information-------------------

---------------BEGIN OF ILP Min Cost Multi Commodity Cplex------------------
Number of demands : 5
Number of arcs : 10
Number of nodes : 5

Number of variables = 51

Capacity :4

---------------END OF ILP Min Cost Multi Commodity Cplex------------------
Output - MCMCF Problem - 
Capacity = 4
Routing : 
From demand: 1 Between nodes: 1 to 3 :: 1 - 2 - 3 :: with length 2
From demand: 2 Between nodes: 2 to 4 :: 2 - 3 - 4 :: with length 2
From demand: 3 Between nodes: 3 to 5 :: 3 - 4 - 5 :: with length 2
From demand: 4 Between nodes: 4 to 1 :: 4 - 5 - 1 :: with length 2
From demand: 5 Between nodes: 5 to 2 :: 5 - 1 - 2 :: with length 2


---------------BEGIN OF Possible paths Information------------------
For demand: 1
Edges: (1,2) (2,3) Path Lenght: 2

***********************: 
For demand: 2
Edges: (2,3) (3,4) Path Lenght: 2

***********************: 
For demand: 3
Edges: (3,4) (4,5) Path Lenght: 2

***********************: 
For demand: 4
Edges: (4,5) (1,5) Path Lenght: 2

***********************: 
For demand: 5
Edges: (1,5) (1,2) Path Lenght: 2

***********************: 

---------------END OF Possible paths Information------------------

---------------BEGIN OF ILP Routing And Spectrum Assignment Cplex------------------
Number of demands : 5
Number of Edges : 5
Number of nodes : 5
Number of slices from MCMCF : 6

Number of variables = 211

Objective Value: 6

---------------END OF ILP Routing And Spectrum Assignment Cplex------------------
Output - RSA Problem - 
Interval chromatic number = 6
Routing : 
From demand: 1 Between nodes: 1 to 3 :: 1 - 2 - 3 :: with length 2
 Slots : 2 - 4
From demand: 2 Between nodes: 2 to 4 :: 2 - 3 - 4 :: with length 2
 Slots : 4 - 6
From demand: 3 Between nodes: 3 to 5 :: 3 - 4 - 5 :: with length 2
 Slots : 2 - 4
From demand: 4 Between nodes: 4 to 1 :: 4 - 5 - 1 :: with length 2
 Slots : 4 - 6
From demand: 5 Between nodes: 5 to 2 :: 5 - 1 - 2 :: with length 2
 Slots : 0 - 2


---------------BEGIN OF Forbidden Cliques Information------------------

---------------END OF Forbidden Cliques Information------------------

---------------BEGIN OF ILP Min Cost Multi Commodity Cplex------------------
Number of demands : 5
Number of arcs : 10
Number of nodes : 5

Number of variables = 51

Capacity :6

---------------END OF ILP Min Cost Multi Commodity Cplex------------------
Output - MCMCF Problem - 
Capacity = 6
Routing : 
From demand: 1 Between nodes: 1 to 3 :: 1 - 5 - 4 - 3 :: with length 3
From demand: 2 Between nodes: 2 to 4 :: 2 - 3 - 4 :: with length 2
From demand: 3 Between nodes: 3 to 5 :: 3 - 4 - 5 :: with length 2
From demand: 4 Between nodes: 4 to 1 :: 4 - 5 - 1 :: with length 2
From demand: 5 Between nodes: 5 to 2 :: 5 - 1 - 2 :: with length 2

===== SOLUTION =====
This solution becomes feasible and this iteration will be stopped
Output - RSA Problem - 
Interval chromatic number = 6
Routing : 
From demand: 1 Between nodes: 1 to 3 :: 1 - 2 - 3 :: with length 2
 Slots : 2 - 4
From demand: 2 Between nodes: 2 to 4 :: 2 - 3 - 4 :: with length 2
 Slots : 4 - 6
From demand: 3 Between nodes: 3 to 5 :: 3 - 4 - 5 :: with length 2
 Slots : 2 - 4
From demand: 4 Between nodes: 4 to 1 :: 4 - 5 - 1 :: with length 2
 Slots : 4 - 6
From demand: 5 Between nodes: 5 to 2 :: 5 - 1 - 2 :: with length 2
 Slots : 0 - 2

---------------------------------------------------: 
Iterations: 2
----------------END OF EXECUTION-------------------: 
